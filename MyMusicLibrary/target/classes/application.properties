# 애플리케이션 이름 설정
spring.application.name=MyMusicLibrary
# 애플리케이션의 이름을 설정합니다.

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/tigerdb?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=scott
spring.datasource.password=tiger

# JPA 및 Hibernate 설정
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# Hibernate가 MySQL 8에 맞는 SQL 쿼리를 생성할 수 있도록 Hibernate 방언을 설정합니다.

spring.jpa.show-sql=true
# 실행되는 SQL 쿼리를 로그에 출력하도록 설정합니다. 디버깅 및 쿼리 분석에 유용합니다.

# 서버 포트 설정
server.port=8081
# 애플리케이션이 실행될 포트 번호를 설정합니다. 기본 포트는 8080이지만, 이 설정에서는 8081로 변경되었습니다.

# JSP 서블릿 설정
server.jsp-servlet.init-parameters.development=true
# JSP 서블릿의 초기화 파라미터를 설정하여 개발 모드에서 JSP 파일을 보다 효과적으로 관리합니다.

# Spring DevTools 설정
spring.devtools.livereload.enabled=true
# Spring DevTools의 LiveReload 기능을 활성화하여 애플리케이션의 변경 사항을 실시간으로 감지하고 브라우저를 자동으로 새로고침합니다.

# 사용자 정의 에러 페이지 설정
server.error.whitelabel.enabled=false
# 기본 오류 페이지 대신 사용자 정의 오류 페이지를 사용하도록 설정합니다.

# MyBatis 설정
mybatis.mapper-locations=mappers/**/*.xml
# MyBatis의 매퍼 XML 파일 위치를 설정합니다. 이 설정은 MyBatis가 SQL 매퍼 파일을 찾는 경로를 지정합니다.

mybatis.type-aliases-package=com.spring.MyMusicLibrary.dao
# MyBatis에서 사용할 타입 알리아스(도메인 객체 클래스)의 패키지를 설정합니다. 이 설정을 통해 MyBatis가 객체를 쉽게 식별할 수 있습니다.

mybatis.configuration.map-underscore-to-camel-case=true
# MyBatis에서 데이터베이스 컬럼 이름의 언더스코어 구분(`user_name`)을 자바의 카멜 케이스(`userName`)로 자동으로 변환합니다.

logging.level.com.atoz_develop.mybatissample.repository=TRACE
# MyBatis의 특정 패키지에서 로깅 레벨을 `TRACE`로 설정하여 디버깅 시 더 많은 로그 정보를 제공합니다.

